/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { SViskhanHeaderItem, } from "./components/s-viskhan-header/interface/common.interface";
export namespace Components {
    interface MyComponent {
    }
    interface SViskhanAnnounce {
    }
    interface SViskhanArticles {
        "forArticles": any;
    }
    interface SViskhanContinue {
        "forContinue": any;
    }
    interface SViskhanErik {
        "forErik": any;
    }
    interface SViskhanEvents {
        "forEvents": any;
    }
    interface SViskhanFooter {
        "forFooter": any;
    }
    interface SViskhanFroala {
        "forNews": any;
    }
    interface SViskhanHeader {
        /**
          * Массив для Header
         */
        "forHeader": any;
        /**
          * Интерфейс для Header
         */
        "header": SViskhanHeaderItem[];
    }
    interface SViskhanHome {
    }
    interface SViskhanItemArticles {
        "forArticles": any;
    }
    interface SViskhanItemBlog {
        "forNewBlogPosts": any;
    }
    interface SViskhanItemDrive {
        "forDrive": any;
    }
    interface SViskhanItemErik {
        "forErik": any;
    }
    interface SViskhanItemEvents {
        "forEvents": any;
    }
    interface SViskhanItemPop {
        "forPopular": any;
    }
    interface SViskhanNewBlog {
        "blog": any;
    }
    interface SViskhanNewBlogPosts {
        "forNewBlogPosts": any;
    }
    interface SViskhanNews {
        "forNews": any;
    }
    interface SViskhanNewsPost {
        "forNewBlog": any;
        "forSidebar": any;
    }
    interface SViskhanNewsSidebar {
        "sidebar": any;
    }
    interface SViskhanPopular {
        "forPopular": any;
    }
    interface SViskhanSecond {
        "forContinue": any;
    }
    interface SViskhanTestDrive {
        "forDrive": any;
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLSViskhanAnnounceElement extends Components.SViskhanAnnounce, HTMLStencilElement {
    }
    var HTMLSViskhanAnnounceElement: {
        prototype: HTMLSViskhanAnnounceElement;
        new (): HTMLSViskhanAnnounceElement;
    };
    interface HTMLSViskhanArticlesElement extends Components.SViskhanArticles, HTMLStencilElement {
    }
    var HTMLSViskhanArticlesElement: {
        prototype: HTMLSViskhanArticlesElement;
        new (): HTMLSViskhanArticlesElement;
    };
    interface HTMLSViskhanContinueElement extends Components.SViskhanContinue, HTMLStencilElement {
    }
    var HTMLSViskhanContinueElement: {
        prototype: HTMLSViskhanContinueElement;
        new (): HTMLSViskhanContinueElement;
    };
    interface HTMLSViskhanErikElement extends Components.SViskhanErik, HTMLStencilElement {
    }
    var HTMLSViskhanErikElement: {
        prototype: HTMLSViskhanErikElement;
        new (): HTMLSViskhanErikElement;
    };
    interface HTMLSViskhanEventsElement extends Components.SViskhanEvents, HTMLStencilElement {
    }
    var HTMLSViskhanEventsElement: {
        prototype: HTMLSViskhanEventsElement;
        new (): HTMLSViskhanEventsElement;
    };
    interface HTMLSViskhanFooterElement extends Components.SViskhanFooter, HTMLStencilElement {
    }
    var HTMLSViskhanFooterElement: {
        prototype: HTMLSViskhanFooterElement;
        new (): HTMLSViskhanFooterElement;
    };
    interface HTMLSViskhanFroalaElement extends Components.SViskhanFroala, HTMLStencilElement {
    }
    var HTMLSViskhanFroalaElement: {
        prototype: HTMLSViskhanFroalaElement;
        new (): HTMLSViskhanFroalaElement;
    };
    interface HTMLSViskhanHeaderElement extends Components.SViskhanHeader, HTMLStencilElement {
    }
    var HTMLSViskhanHeaderElement: {
        prototype: HTMLSViskhanHeaderElement;
        new (): HTMLSViskhanHeaderElement;
    };
    interface HTMLSViskhanHomeElement extends Components.SViskhanHome, HTMLStencilElement {
    }
    var HTMLSViskhanHomeElement: {
        prototype: HTMLSViskhanHomeElement;
        new (): HTMLSViskhanHomeElement;
    };
    interface HTMLSViskhanItemArticlesElement extends Components.SViskhanItemArticles, HTMLStencilElement {
    }
    var HTMLSViskhanItemArticlesElement: {
        prototype: HTMLSViskhanItemArticlesElement;
        new (): HTMLSViskhanItemArticlesElement;
    };
    interface HTMLSViskhanItemBlogElement extends Components.SViskhanItemBlog, HTMLStencilElement {
    }
    var HTMLSViskhanItemBlogElement: {
        prototype: HTMLSViskhanItemBlogElement;
        new (): HTMLSViskhanItemBlogElement;
    };
    interface HTMLSViskhanItemDriveElement extends Components.SViskhanItemDrive, HTMLStencilElement {
    }
    var HTMLSViskhanItemDriveElement: {
        prototype: HTMLSViskhanItemDriveElement;
        new (): HTMLSViskhanItemDriveElement;
    };
    interface HTMLSViskhanItemErikElement extends Components.SViskhanItemErik, HTMLStencilElement {
    }
    var HTMLSViskhanItemErikElement: {
        prototype: HTMLSViskhanItemErikElement;
        new (): HTMLSViskhanItemErikElement;
    };
    interface HTMLSViskhanItemEventsElement extends Components.SViskhanItemEvents, HTMLStencilElement {
    }
    var HTMLSViskhanItemEventsElement: {
        prototype: HTMLSViskhanItemEventsElement;
        new (): HTMLSViskhanItemEventsElement;
    };
    interface HTMLSViskhanItemPopElement extends Components.SViskhanItemPop, HTMLStencilElement {
    }
    var HTMLSViskhanItemPopElement: {
        prototype: HTMLSViskhanItemPopElement;
        new (): HTMLSViskhanItemPopElement;
    };
    interface HTMLSViskhanNewBlogElement extends Components.SViskhanNewBlog, HTMLStencilElement {
    }
    var HTMLSViskhanNewBlogElement: {
        prototype: HTMLSViskhanNewBlogElement;
        new (): HTMLSViskhanNewBlogElement;
    };
    interface HTMLSViskhanNewBlogPostsElement extends Components.SViskhanNewBlogPosts, HTMLStencilElement {
    }
    var HTMLSViskhanNewBlogPostsElement: {
        prototype: HTMLSViskhanNewBlogPostsElement;
        new (): HTMLSViskhanNewBlogPostsElement;
    };
    interface HTMLSViskhanNewsElement extends Components.SViskhanNews, HTMLStencilElement {
    }
    var HTMLSViskhanNewsElement: {
        prototype: HTMLSViskhanNewsElement;
        new (): HTMLSViskhanNewsElement;
    };
    interface HTMLSViskhanNewsPostElement extends Components.SViskhanNewsPost, HTMLStencilElement {
    }
    var HTMLSViskhanNewsPostElement: {
        prototype: HTMLSViskhanNewsPostElement;
        new (): HTMLSViskhanNewsPostElement;
    };
    interface HTMLSViskhanNewsSidebarElement extends Components.SViskhanNewsSidebar, HTMLStencilElement {
    }
    var HTMLSViskhanNewsSidebarElement: {
        prototype: HTMLSViskhanNewsSidebarElement;
        new (): HTMLSViskhanNewsSidebarElement;
    };
    interface HTMLSViskhanPopularElement extends Components.SViskhanPopular, HTMLStencilElement {
    }
    var HTMLSViskhanPopularElement: {
        prototype: HTMLSViskhanPopularElement;
        new (): HTMLSViskhanPopularElement;
    };
    interface HTMLSViskhanSecondElement extends Components.SViskhanSecond, HTMLStencilElement {
    }
    var HTMLSViskhanSecondElement: {
        prototype: HTMLSViskhanSecondElement;
        new (): HTMLSViskhanSecondElement;
    };
    interface HTMLSViskhanTestDriveElement extends Components.SViskhanTestDrive, HTMLStencilElement {
    }
    var HTMLSViskhanTestDriveElement: {
        prototype: HTMLSViskhanTestDriveElement;
        new (): HTMLSViskhanTestDriveElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "s-viskhan-announce": HTMLSViskhanAnnounceElement;
        "s-viskhan-articles": HTMLSViskhanArticlesElement;
        "s-viskhan-continue": HTMLSViskhanContinueElement;
        "s-viskhan-erik": HTMLSViskhanErikElement;
        "s-viskhan-events": HTMLSViskhanEventsElement;
        "s-viskhan-footer": HTMLSViskhanFooterElement;
        "s-viskhan-froala": HTMLSViskhanFroalaElement;
        "s-viskhan-header": HTMLSViskhanHeaderElement;
        "s-viskhan-home": HTMLSViskhanHomeElement;
        "s-viskhan-item-articles": HTMLSViskhanItemArticlesElement;
        "s-viskhan-item-blog": HTMLSViskhanItemBlogElement;
        "s-viskhan-item-drive": HTMLSViskhanItemDriveElement;
        "s-viskhan-item-erik": HTMLSViskhanItemErikElement;
        "s-viskhan-item-events": HTMLSViskhanItemEventsElement;
        "s-viskhan-item-pop": HTMLSViskhanItemPopElement;
        "s-viskhan-new-blog": HTMLSViskhanNewBlogElement;
        "s-viskhan-new-blog-posts": HTMLSViskhanNewBlogPostsElement;
        "s-viskhan-news": HTMLSViskhanNewsElement;
        "s-viskhan-news-post": HTMLSViskhanNewsPostElement;
        "s-viskhan-news-sidebar": HTMLSViskhanNewsSidebarElement;
        "s-viskhan-popular": HTMLSViskhanPopularElement;
        "s-viskhan-second": HTMLSViskhanSecondElement;
        "s-viskhan-test-drive": HTMLSViskhanTestDriveElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
    }
    interface SViskhanAnnounce {
    }
    interface SViskhanArticles {
        "forArticles"?: any;
    }
    interface SViskhanContinue {
        "forContinue"?: any;
    }
    interface SViskhanErik {
        "forErik"?: any;
    }
    interface SViskhanEvents {
        "forEvents"?: any;
    }
    interface SViskhanFooter {
        "forFooter"?: any;
    }
    interface SViskhanFroala {
        "forNews"?: any;
    }
    interface SViskhanHeader {
        /**
          * Массив для Header
         */
        "forHeader"?: any;
        /**
          * Интерфейс для Header
         */
        "header"?: SViskhanHeaderItem[];
        /**
          * Клик по Articles
         */
        "onClickHeaderArticles"?: (event: CustomEvent<any>) => void;
        /**
          * Клик по Button
         */
        "onClickHeaderButton"?: (event: CustomEvent<any>) => void;
        /**
          * Клик по Customer Stories
         */
        "onClickHeaderCustomerStories"?: (event: CustomEvent<any>) => void;
        /**
          * Клик по Articles
         */
        "onClickHeaderEvents"?: (event: CustomEvent<any>) => void;
        /**
          * Клик по Icon
         */
        "onClickHeaderIcon"?: (event: CustomEvent<any>) => void;
        /**
          * Клик по картинке
         */
        "onClickHeaderImg"?: (event: CustomEvent<any>) => void;
        /**
          * Клик по Input
         */
        "onClickHeaderInput"?: (event: CustomEvent<any>) => void;
        /**
          * Клик по Reports
         */
        "onClickHeaderReports"?: (event: CustomEvent<any>) => void;
        /**
          * Клик по wibbitz
         */
        "onClickHeaderWibbitz"?: (event: CustomEvent<any>) => void;
    }
    interface SViskhanHome {
    }
    interface SViskhanItemArticles {
        "forArticles"?: any;
    }
    interface SViskhanItemBlog {
        "forNewBlogPosts"?: any;
    }
    interface SViskhanItemDrive {
        "forDrive"?: any;
    }
    interface SViskhanItemErik {
        "forErik"?: any;
    }
    interface SViskhanItemEvents {
        "forEvents"?: any;
    }
    interface SViskhanItemPop {
        "forPopular"?: any;
    }
    interface SViskhanNewBlog {
        "blog"?: any;
    }
    interface SViskhanNewBlogPosts {
        "forNewBlogPosts"?: any;
    }
    interface SViskhanNews {
        "forNews"?: any;
    }
    interface SViskhanNewsPost {
        "forNewBlog"?: any;
        "forSidebar"?: any;
    }
    interface SViskhanNewsSidebar {
        "sidebar"?: any;
    }
    interface SViskhanPopular {
        "forPopular"?: any;
    }
    interface SViskhanSecond {
        "forContinue"?: any;
    }
    interface SViskhanTestDrive {
        "forDrive"?: any;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "s-viskhan-announce": SViskhanAnnounce;
        "s-viskhan-articles": SViskhanArticles;
        "s-viskhan-continue": SViskhanContinue;
        "s-viskhan-erik": SViskhanErik;
        "s-viskhan-events": SViskhanEvents;
        "s-viskhan-footer": SViskhanFooter;
        "s-viskhan-froala": SViskhanFroala;
        "s-viskhan-header": SViskhanHeader;
        "s-viskhan-home": SViskhanHome;
        "s-viskhan-item-articles": SViskhanItemArticles;
        "s-viskhan-item-blog": SViskhanItemBlog;
        "s-viskhan-item-drive": SViskhanItemDrive;
        "s-viskhan-item-erik": SViskhanItemErik;
        "s-viskhan-item-events": SViskhanItemEvents;
        "s-viskhan-item-pop": SViskhanItemPop;
        "s-viskhan-new-blog": SViskhanNewBlog;
        "s-viskhan-new-blog-posts": SViskhanNewBlogPosts;
        "s-viskhan-news": SViskhanNews;
        "s-viskhan-news-post": SViskhanNewsPost;
        "s-viskhan-news-sidebar": SViskhanNewsSidebar;
        "s-viskhan-popular": SViskhanPopular;
        "s-viskhan-second": SViskhanSecond;
        "s-viskhan-test-drive": SViskhanTestDrive;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "s-viskhan-announce": LocalJSX.SViskhanAnnounce & JSXBase.HTMLAttributes<HTMLSViskhanAnnounceElement>;
            "s-viskhan-articles": LocalJSX.SViskhanArticles & JSXBase.HTMLAttributes<HTMLSViskhanArticlesElement>;
            "s-viskhan-continue": LocalJSX.SViskhanContinue & JSXBase.HTMLAttributes<HTMLSViskhanContinueElement>;
            "s-viskhan-erik": LocalJSX.SViskhanErik & JSXBase.HTMLAttributes<HTMLSViskhanErikElement>;
            "s-viskhan-events": LocalJSX.SViskhanEvents & JSXBase.HTMLAttributes<HTMLSViskhanEventsElement>;
            "s-viskhan-footer": LocalJSX.SViskhanFooter & JSXBase.HTMLAttributes<HTMLSViskhanFooterElement>;
            "s-viskhan-froala": LocalJSX.SViskhanFroala & JSXBase.HTMLAttributes<HTMLSViskhanFroalaElement>;
            "s-viskhan-header": LocalJSX.SViskhanHeader & JSXBase.HTMLAttributes<HTMLSViskhanHeaderElement>;
            "s-viskhan-home": LocalJSX.SViskhanHome & JSXBase.HTMLAttributes<HTMLSViskhanHomeElement>;
            "s-viskhan-item-articles": LocalJSX.SViskhanItemArticles & JSXBase.HTMLAttributes<HTMLSViskhanItemArticlesElement>;
            "s-viskhan-item-blog": LocalJSX.SViskhanItemBlog & JSXBase.HTMLAttributes<HTMLSViskhanItemBlogElement>;
            "s-viskhan-item-drive": LocalJSX.SViskhanItemDrive & JSXBase.HTMLAttributes<HTMLSViskhanItemDriveElement>;
            "s-viskhan-item-erik": LocalJSX.SViskhanItemErik & JSXBase.HTMLAttributes<HTMLSViskhanItemErikElement>;
            "s-viskhan-item-events": LocalJSX.SViskhanItemEvents & JSXBase.HTMLAttributes<HTMLSViskhanItemEventsElement>;
            "s-viskhan-item-pop": LocalJSX.SViskhanItemPop & JSXBase.HTMLAttributes<HTMLSViskhanItemPopElement>;
            "s-viskhan-new-blog": LocalJSX.SViskhanNewBlog & JSXBase.HTMLAttributes<HTMLSViskhanNewBlogElement>;
            "s-viskhan-new-blog-posts": LocalJSX.SViskhanNewBlogPosts & JSXBase.HTMLAttributes<HTMLSViskhanNewBlogPostsElement>;
            "s-viskhan-news": LocalJSX.SViskhanNews & JSXBase.HTMLAttributes<HTMLSViskhanNewsElement>;
            "s-viskhan-news-post": LocalJSX.SViskhanNewsPost & JSXBase.HTMLAttributes<HTMLSViskhanNewsPostElement>;
            "s-viskhan-news-sidebar": LocalJSX.SViskhanNewsSidebar & JSXBase.HTMLAttributes<HTMLSViskhanNewsSidebarElement>;
            "s-viskhan-popular": LocalJSX.SViskhanPopular & JSXBase.HTMLAttributes<HTMLSViskhanPopularElement>;
            "s-viskhan-second": LocalJSX.SViskhanSecond & JSXBase.HTMLAttributes<HTMLSViskhanSecondElement>;
            "s-viskhan-test-drive": LocalJSX.SViskhanTestDrive & JSXBase.HTMLAttributes<HTMLSViskhanTestDriveElement>;
        }
    }
}
